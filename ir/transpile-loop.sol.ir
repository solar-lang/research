// vim: set syntax=rust:

// lib.sol

forLoop() = {
    let mut sum = 0

    for elem in (range 1 10) {
        sum = sum + elem
    }

    return sum
}


// Note: the following IR is not a final concept. It's wrong on some parts and focuses soley on the `for in` transformation

fn lib.forLoop
{
    let sum: i64 = 0:i64

    // BEGIN FOR LOOP
    {
        let tmp1: Range<i64> = range(1, 10)
        loop {
            let elem: i64
            {
                let tmp2 = next(&tmp1)
                if eq(tmp2.tag, std.Option.None) {
                    // free(tmp1)
                    // free(tmp2)
                    /* there might be references to elem */
                    goto #loop1
                }
                elem = tmp2.value
            }

            sum = add(sum, elem)
        }

    }
    #loop1
    // END FOR LOOP

    return sum:i64
}
